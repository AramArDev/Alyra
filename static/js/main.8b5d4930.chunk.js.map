{"version":3,"sources":["getWeb3.js","components/Owner.js","components/Voter.js","components/PagePublic.js","components/GetVoter.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Owner","parentToChild","account","contract","inputAddVoter","useRef","useState","winner","setWiner","alertAdd","setAlertAdd","getWinner","setGetWiner","useEffect","events","VoterRegistered","fromBlock","on","event","addr","returnValues","voterAddress","changed","err","error","connected","WorkflowStatusChange","newStatus","methods","call","result","alert","addVoterSubmit","e","preventDefault","value","current","addVoter","send","from","endAddVoters","startProposalsRegistering","endProposals","endProposalsRegistering","startVotes","startVotingSession","endVoting","endVotingSession","tallyVotes","tallyVotesDraw","style","display","justifyContent","Card","width","Header","description","voteCount","Body","Form","Group","controlId","Control","type","ref","Button","onClick","variant","margin","Voter","inputAddProposal","inputVote","winer","alertVote","setAlertVote","ProposalRegistered","proposalId","Voted","addProposal","vote","setVote","PagePublic","GetVoter","inputGetVoter","voterSearched","setVoterSearched","isRegistered","hasVoted","votedProposalId","voter","setVoter","getVoter","then","App","state","setState","isOwner","setIsOwner","isVoter","setIsVoter","eth","getAccounts","accounts","net","getId","networkId","deployedNetwork","Voting","networks","instance","Contract","abi","address","owner","catch","revertReason","location","reload","className","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b5d4930.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst Owner = ({ parentToChild }) => {\r\n  const { account, contract } = parentToChild;\r\n\r\n  const inputAddVoter = useRef();\r\n\r\n  const [winner, setWiner] = useState(null);\r\n  const [alertAdd, setAlertAdd] = useState(\"\");\r\n  const [getWinner, setGetWiner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await contract.events.VoterRegistered({ fromBlock: 0 })\r\n        .on(\"data\", (event) => {\r\n          let addr = event.returnValues.voterAddress;\r\n          setAlertAdd(addr);\r\n        })\r\n        .on(\"changed\", (changed) => console.log(changed))\r\n        .on(\"error\", (err) => console.error(err))\r\n        .on(\"connected\", (connected) => console.log(connected));\r\n\r\n      await contract.events.WorkflowStatusChange({ fromBlock: 0 })\r\n        .on(\"data\", (event) => {\r\n          let newStatus = event.returnValues.newStatus;\r\n          if (newStatus >= 5) {\r\n            setGetWiner(true)\r\n          }\r\n        })\r\n        .on(\"changed\", (changed) => console.log(changed))\r\n        .on(\"error\", (err) => console.log(err))\r\n        .on(\"connected\", (connected) => console.log(connected));\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await contract.methods.getWinner().call((error, result) => {\r\n          !error && setWiner(result);\r\n      });\r\n    })();\r\n  }, [getWinner]);\r\n\r\n  useEffect(() => {\r\n    if (alertAdd !== \"\") {\r\n      alert(`Le voteur ${alertAdd} a été ajouté.`);\r\n    }\r\n  }, [alertAdd]);\r\n\r\n  /* ************************************************\r\n                      FUNCTIONS\r\n  ****************************************************** */\r\n\r\n  const addVoterSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let value = inputAddVoter.current.value;\r\n    await contract.methods.addVoter(value).send({ from: account });\r\n  };\r\n\r\n  const endAddVoters = async () => {\r\n    await contract.methods.startProposalsRegistering().send({ from: account });\r\n  };\r\n\r\n  const endProposals = async () => {\r\n    await contract.methods.endProposalsRegistering().send({ from: account });\r\n  };\r\n\r\n  const startVotes = async () => {\r\n    await contract.methods.startVotingSession().send({ from: account });\r\n  };\r\n\r\n  const endVoting = async () => {\r\n    await contract.methods.endVotingSession().send({ from: account });\r\n  };\r\n\r\n  const tallyVotes = async () => {\r\n    await contract.methods.tallyVotesDraw().send({ from: account });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Owner</h1>\r\n        <h5>{account}</h5>\r\n        <hr />\r\n        <br></br>\r\n      </div>\r\n\r\n      {winner ? (\r\n        <div>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Card style={{ width: \"50rem\" }}>\r\n              <Card.Header>\r\n                <strong>\r\n                  {winner\r\n                    ? `La proposition \"${winner.description}\" a gagné avac ${winner.voteCount} vote(s).`\r\n                    : \"Les votes ne sont pas encore finis, le gagnant est inconnu.\"}\r\n                </strong>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <h5>{winner ? `Il a eu ${winner.voteCount} vote(s).` : \"\"}</h5>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n          <br></br>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Card style={{ width: \"50rem\" }}>\r\n              <Card.Header>\r\n                <strong>Ajouter des voteurs</strong>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form.Group controlId=\"formAddress\">\r\n                  <Form.Control type=\"text\" ref={inputAddVoter} />\r\n                </Form.Group>\r\n                <h6></h6>\r\n                <Button onClick={addVoterSubmit} variant=\"dark\">\r\n                  Ajouter\r\n                </Button>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Button margin=\"10px\" onClick={endAddVoters} variant=\"dark\">\r\n                  Cloturer les ajouts\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n          <br></br>\r\n\r\n          {/* FIN PROPOSALS AND START VOTES */}\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Card style={{ width: \"50rem\" }}>\r\n              <Card.Header>\r\n                <strong>\r\n                  Mettre fin aux propositions et commencer la vote\r\n                </strong>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Button onClick={endProposals} variant=\"dark\">\r\n                  Cloturer les propositions\r\n                </Button>\r\n                <h6></h6>\r\n                <Button margin=\"10px\" onClick={startVotes} variant=\"dark\">\r\n                  Commencer les votes\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n          <br></br>\r\n\r\n          {/* FIN VOTES ET COMPTABILISE*/}\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Card style={{ width: \"50rem\" }}>\r\n              <Card.Header>\r\n                <strong>Mettre fin aux votes et comptabiliser</strong>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Button onClick={endVoting} variant=\"dark\">\r\n                  Cloturer les votes\r\n                </Button>\r\n                <h6></h6>\r\n                <Button onClick={tallyVotes} variant=\"dark\">\r\n                  Comptabiliser\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n          <br></br>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Owner;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst Voter = ({ parentToChild }) => {\r\n  const { account, contract } = parentToChild;\r\n\r\n  const inputAddProposal = useRef();\r\n  const inputVote = useRef();\r\n\r\n  const [winer, setWiner] = useState(null);\r\n  const [alertAdd, setAlertAdd] = useState(\"\");\r\n  const [alertVote, setAlertVote] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await contract.events.WorkflowStatusChange({ fromBlock: 0 })\r\n        .on(\"data\", (event) => {\r\n          let newStatus = event.returnValues.newStatus;\r\n          if (newStatus >= 5) {\r\n            (async () => {\r\n              await contract.methods.getWinner().call((error, result) => {\r\n                !error && setWiner(result);\r\n              });\r\n            })();\r\n          }\r\n        })\r\n        .on(\"changed\", (changed) => console.log(changed))\r\n        .on(\"error\", (err) => console.log(err))\r\n        .on(\"connected\", (connected) => console.log(connected));\r\n\r\n      await contract.events.ProposalRegistered({ fromBlock: 0 })\r\n        .on(\"data\", (event) => {\r\n          let proposalId = event.returnValues.proposalId;\r\n          setAlertAdd(proposalId);\r\n        })\r\n        .on(\"changed\", (changed) => console.log(changed))\r\n        .on(\"error\", (err) => console.log(err))\r\n        .on(\"connected\", (connected) => console.log(connected));\r\n\r\n      await contract.events.Voted({ fromBlock: 0 })\r\n        .on(\"data\", (event) => {\r\n          let proposalId = event.returnValues.proposalId;\r\n          setAlertVote(proposalId);\r\n        })\r\n        .on(\"changed\", (changed) => console.log(changed))\r\n        .on(\"error\", (err) => console.log(err))\r\n        .on(\"connected\", (connected) => console.log(connected));\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (alertAdd !== \"\") {\r\n      alert(`Le Proposition ${alertAdd} a été ajouté.`);\r\n    }\r\n  }, [alertAdd]);\r\n\r\n  useEffect(() => {\r\n    if (alertVote !== \"\") {\r\n      alert(`Une vote a ete fais pour la proposition ${alertVote}.`);\r\n    }\r\n  }, [alertVote]);\r\n\r\n  const addProposal = async (e) => {\r\n    e.preventDefault();\r\n    let value = inputAddProposal.current.value;\r\n\r\n    contract.methods.addProposal(value).send({ from: account }, (error) => {\r\n      if (error !== null) {\r\n        console.log(error);\r\n      }\r\n    });\r\n  };\r\n\r\n  const vote = async (e) => {\r\n    e.preventDefault();\r\n    let value = inputVote.current.value;\r\n\r\n    await contract.methods.setVote(value).send({ from: account }, (error) => {\r\n      if (error !== null) {\r\n        console.log(error);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Voter</h1>\r\n        <h5>{account}</h5>\r\n        <hr />\r\n        <br></br>\r\n      </div>\r\n\r\n      {winer ? (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Card style={{ width: \"50rem\" }}>\r\n            <Card.Header>\r\n              <strong>\r\n                {winer\r\n                    ? `La proposition \"${winer.description}\" a gagné avac ${winer.voteCount} vote(s).`\r\n                    : \"Les votes ne sont pas encore finis, le gagnant est inconnu.\"}\r\n              </strong>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <h5>{winer ? `Il a eu ${winer.voteCount} vote(s).` : \"\"}</h5>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Card style={{ width: \"50rem\" }}>\r\n              <Card.Header>\r\n                <strong>Ajouter une proposition</strong>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form.Group controlId=\"formAddress\">\r\n                  <Form.Control type=\"text\" ref={inputAddProposal} />\r\n                </Form.Group>\r\n                <h6></h6>\r\n                <Button onClick={addProposal} variant=\"dark\">\r\n                  Ajouter\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n          <br></br>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Card style={{ width: \"50rem\" }}>\r\n              <Card.Header>\r\n                <strong>Voter pour une proposition avec son ID</strong>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form.Group controlId=\"formAddress\">\r\n                  <Form.Control type=\"text\" ref={inputVote} />\r\n                </Form.Group>\r\n                <h6></h6>\r\n                <Button onClick={vote} variant=\"dark\">\r\n                  Voter\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <br></br>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Voter;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst PagePublic = ({ parentToChild }) => {\r\n  const { account, contract } = parentToChild;\r\n\r\n  const [winer, setWiner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (contract) {\r\n        await contract.events.WorkflowStatusChange({ fromBlock: 0 })\r\n          .on(\"data\", (event) => {\r\n            let newStatus = event.returnValues.newStatus;\r\n            if (newStatus >= 5) {\r\n              (async () => {\r\n                await contract.methods.getWinner().call((error, result) => {\r\n                  !error && setWiner(result);\r\n                });\r\n              })();\r\n            }\r\n          })\r\n          .on(\"changed\", (changed) => console.log(changed))\r\n          .on(\"error\", (err) => console.log(err))\r\n          .on(\"connected\", (connected) => console.log(connected));\r\n      }\r\n    })();\r\n  }, [contract]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Public</h1>\r\n      <h5>{account}</h5>\r\n      <hr />\r\n      <br></br>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Card style={{ width: \"50rem\" }}>\r\n          <Card.Header>\r\n            <strong>\r\n              {winer\r\n                ? `La proposition \"${winer.description}\" a gagné avac ${winer.voteCount} vote(s).`\r\n                : \"Les votes ne sont pas encore finis, le gagnant est inconnu.\"}\r\n            </strong>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <h5>{winer ? `Il a eu ${winer.voteCount} vote(s).` : \"\"}</h5>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PagePublic;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst GetVoter = ({ parentToChild }) => {\r\n  const { account, contract } = parentToChild;\r\n\r\n  const inputGetVoter = useRef();\r\n  const [voterSearched, setVoterSearched] = useState(\"\");\r\n  const [voter, setVoter] = useState({\r\n\tisRegistered: \"\",\r\n\thasVoted: \"\",\r\n\tvotedProposalId: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n\t(async () => {\r\n\t  if (voterSearched !== \"\") {\r\n\t\ttry {\r\n\t\t  await contract.methods.getVoter(voterSearched)\r\n\t\t\t.call({ from: account })\r\n\t\t\t.then((result) => {\r\n\t\t\t  setVoter({\r\n\t\t\t\tisRegistered: result.isRegistered,\r\n\t\t\t\thasVoted: result.hasVoted,\r\n\t\t\t\tvotedProposalId: result.votedProposalId,\r\n\t\t\t  });\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t  setVoter(\"Erreur\");\r\n\t\t  console.error(e);\r\n\t\t}\r\n\t  }\r\n\t})();\r\n  }, [voterSearched]);\r\n\r\n  const getVoter = async (e) => {\r\n\te.preventDefault();\r\n\tlet value = inputGetVoter.current.value;\r\n\tsetVoterSearched(value);\r\n  };\r\n\r\n  return (\r\n\t<div>\r\n\t  <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n\t\t<Card style={{ width: \"50rem\" }}>\r\n\t\t  <Card.Header>\r\n\t\t\t<strong>Trouver un voteur</strong>\r\n\t\t  </Card.Header>\r\n\t\t  <Card.Body>\r\n\t\t\t<Form.Group controlId=\"formAddress\">\r\n\t\t\t  <Form.Control type=\"text\" ref={inputGetVoter} />\r\n\t\t\t</Form.Group>\r\n\t\t\t<h6></h6>\r\n\t\t\t<Button onClick={getVoter} variant=\"dark\">\r\n\t\t\t  Trouver\r\n\t\t\t</Button>\r\n\t\t\t<br></br>\r\n\t\t\t<br></br>\r\n\t\t\t{voterSearched !== \"\" && (\r\n\t\t\t  <div>\r\n\t\t\t\t{voter.isRegistered \r\n\t\t\t\t  ? (voter.hasVoted \r\n\t\t\t\t\t\t? <h5>Il/elle a voté pour la proposition {voter.votedProposalId}.</h5>\r\n\t\t\t\t\t\t: <h5>Il/elle est enregister mais n'a pas voté</h5>) \r\n\t\t\t\t  :<h5>Il n'est pas un voteur</h5>\r\n\t\t\t\t}\r\n\t\t\t  </div>\r\n\t\t\t)}\r\n\t\t  </Card.Body>\r\n\t\t</Card>\r\n\t  </div>\r\n\t  <br></br>\r\n\t</div>\r\n  );\r\n};\r\n\r\nexport default GetVoter;\r\n","import React, { useEffect, useState} from \"react\";\nimport Voting from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport \"./App.css\";\n\nimport Owner from \"./components/Owner\";\nimport Voter from \"./components/Voter\";\nimport PagePublic from \"./components/PagePublic\";\nimport GetVoter from \"./components/GetVoter\";\n\nfunction App() {\n  const [state, setState] = useState({ account: null, contract: null});\n\n  const [isOwner, setIsOwner] = useState(false);\n  const [isVoter, setIsVoter] = useState(false);\n  \n  useEffect(() => {\n    (async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n\n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n        \n\n        // Get the contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = Voting.networks[networkId];\n        const instance = new web3.eth.Contract(\n          Voting.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n        \n        setState({ account: accounts[0], contract: instance });\n\n        const owner = await instance.methods.owner().call();\n        setIsOwner(owner === accounts[0]);\n\n        try {\n          await instance.methods.getVoter(accounts[0]).call({ from: accounts[0] })\n          .then((result) => {    \n            setIsVoter(result.isRegistered);\n          })\n          .catch(revertReason => console.error({ revertReason }));\n        } catch (e) {\n          setIsVoter(false);\n          console.error(e);\n        }\n\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n        console.error(error);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      window.ethereum.on(\"accountsChanged\", async function() {\n        window.location.reload(false);\n      });\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\">\n\n          <div>\n            {isOwner && <Owner parentToChild = {state} /> }\n            {(!isOwner && isVoter) && <Voter parentToChild = {state} /> }\n            {(isOwner || isVoter) && <GetVoter parentToChild = {state} /> }\n            {(!isOwner && !isVoter) && <PagePublic parentToChild = {state} /> }\n          </div>\n  \n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}